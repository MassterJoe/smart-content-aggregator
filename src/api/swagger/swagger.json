{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"CustomApiResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"status_code": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"data": {}
				},
				"required": [
					"status_code",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateUserDTO": {
				"description": "DTO for creating a new user",
				"properties": {
					"username": {
						"type": "string",
						"example": "SalawuJoseph"
					},
					"email": {
						"type": "string",
						"example": "john.doe@example.com"
					},
					"password": {
						"type": "string",
						"example": "Password123!"
					},
					"role": {
						"type": "string",
						"enum": [
							"user",
							"admin"
						],
						"example": "user"
					},
					"status": {
						"type": "string",
						"enum": [
							"active",
							"inactive",
							"suspended"
						],
						"example": "active"
					},
					"interests": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"example": [
							"tech",
							"sports"
						]
					}
				},
				"required": [
					"username",
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthUserDTO": {
				"description": "DTO for user login",
				"properties": {
					"email": {
						"type": "string",
						"example": "john.doe@example.com"
					},
					"password": {
						"type": "string",
						"example": "Password123!"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateUserDTO": {
				"description": "DTO for updating an existing user",
				"properties": {
					"username": {
						"type": "string",
						"example": "NewUsername"
					},
					"email": {
						"type": "string",
						"example": "john.doe@example.com"
					},
					"password": {
						"type": "string",
						"example": "NewPassword123!"
					},
					"status": {
						"type": "string",
						"enum": [
							"active",
							"inactive",
							"suspended"
						],
						"example": "inactive"
					},
					"interests": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"example": [
							"politics",
							"health"
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EmailVerificationDTO": {
				"description": "DTO for verifying user email",
				"properties": {
					"otp": {
						"type": "string",
						"example": "123456"
					},
					"verification_token": {
						"type": "string",
						"example": "a1b2c3d4-e5f6-7890-1234-56789abcdef0"
					}
				},
				"required": [
					"otp",
					"verification_token"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InteractionType": {
				"type": "string",
				"enum": [
					"like",
					"love",
					"angry",
					"sad",
					"comment",
					"share",
					"bookmark",
					"view"
				]
			},
			"InteractionResponseDTO": {
				"properties": {
					"id": {
						"type": "string",
						"example": "64e9c1b2a3d4f5e6b7c8d9e0"
					},
					"articleId": {
						"type": "string",
						"example": "64e9b5d2f1b2c3d4e5f6a7b8"
					},
					"userId": {
						"type": "string",
						"example": "64e9a1b2c3d4e5f6a7b8c9d0"
					},
					"type": {
						"$ref": "#/components/schemas/InteractionType",
						"example": "like"
					},
					"comment": {
						"type": "string",
						"example": "Great article! Very insightful."
					},
					"createdAt": {
						"type": "string",
						"example": "2025-09-01T12:34:56.000Z"
					},
					"updatedAt": {
						"type": "string",
						"example": "2025-09-01T12:34:56.000Z"
					}
				},
				"required": [
					"id",
					"articleId",
					"userId",
					"type",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateInteractionDTO": {
				"properties": {
					"articleId": {
						"type": "string",
						"example": "64e9b5d2f1b2c3d4e5f6a7b8"
					},
					"userId": {
						"type": "string",
						"example": "64e9a1b2c3d4e5f6a7b8c9d0"
					},
					"type": {
						"$ref": "#/components/schemas/InteractionType",
						"example": "like"
					},
					"comment": {
						"type": "string",
						"example": "Great article! Very insightful."
					}
				},
				"required": [
					"articleId",
					"userId",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ArticleResponseDTO": {
				"properties": {
					"id": {
						"type": "string",
						"example": "64e9b5d2f1b2c3d4e5f6a7b8"
					},
					"title": {
						"type": "string",
						"example": "How to Build a Content Aggregator"
					},
					"content": {
						"type": "string",
						"example": "This article explains how to build a smart content aggregator..."
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"example": [
							"tech",
							"nodejs",
							"aggregator"
						]
					},
					"author": {
						"type": "string",
						"example": "64e9a1b2c3d4e5f6a7b8c9d0"
					},
					"views": {
						"type": "number",
						"format": "double",
						"example": 123
					},
					"createdAt": {
						"type": "string",
						"example": "2025-09-01T12:34:56.000Z"
					},
					"updatedAt": {
						"type": "string",
						"example": "2025-09-01T12:34:56.000Z"
					}
				},
				"required": [
					"id",
					"title",
					"content",
					"tags",
					"author",
					"views",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateArticleDTO": {
				"properties": {
					"title": {
						"type": "string",
						"example": "How AI is Changing the World"
					},
					"content": {
						"type": "string",
						"example": "Artificial Intelligence is transforming industries..."
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"example": [
							"tech",
							"ai",
							"innovation"
						]
					},
					"author": {
						"type": "string",
						"example": "60f7f0a5b6f7c9a3d8b12345"
					},
					"url": {
						"type": "string",
						"example": "https://example.com/article"
					}
				},
				"required": [
					"title",
					"content",
					"author"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateArticleDTO": {
				"properties": {
					"title": {
						"type": "string",
						"example": "Updated Article Title"
					},
					"content": {
						"type": "string",
						"example": "Updated article content goes here..."
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"example": [
							"science",
							"research"
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "smart-content-aggregator",
		"version": "1.0.0",
		"description": "This a project for Tobams group associate backend role",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Salawu Olanrewaju J"
		}
	},
	"paths": {
		"/users": {
			"post": {
				"operationId": "RegisterUser",
				"responses": {
					"201": {
						"description": "User registered successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					}
				},
				"description": "Register a new user",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "ListUsers",
				"responses": {
					"200": {
						"description": "Users retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					}
				},
				"description": "List users (with pagination & search)",
				"tags": [
					"Users"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users/login": {
			"post": {
				"operationId": "LoginUser",
				"responses": {
					"200": {
						"description": "Login successful",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					},
					"400": {
						"description": "Invalid credentials",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					}
				},
				"description": "Login user",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthUserDTO"
							}
						}
					}
				}
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "User retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					}
				},
				"description": "Get a single user by ID",
				"tags": [
					"Users"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "User updated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					}
				},
				"description": "Update a user",
				"tags": [
					"Users"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserDTO"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "User deleted successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					}
				},
				"description": "Delete a user",
				"tags": [
					"Users"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users/validate-email": {
			"post": {
				"operationId": "ValidateEmail",
				"responses": {
					"200": {
						"description": "Email verified successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					},
					"400": {
						"description": "Invalid or expired token",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomApiResponse"
								}
							}
						}
					}
				},
				"description": "Validate user email using token + OTP",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EmailVerificationDTO"
							}
						}
					}
				}
			}
		},
		"/interactions": {
			"post": {
				"operationId": "CreateInteraction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InteractionResponseDTO"
								}
							}
						}
					}
				},
				"tags": [
					"Interactions"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateInteractionDTO"
							}
						}
					}
				}
			}
		},
		"/interactions/{articleId}": {
			"get": {
				"operationId": "GetInteractions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/InteractionResponseDTO"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Interactions"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "articleId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/interactions/{id}": {
			"delete": {
				"operationId": "DeleteInteraction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Interactions"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/articles/{userId}": {
			"post": {
				"operationId": "CreateArticle",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ArticleResponseDTO"
								}
							}
						}
					}
				},
				"tags": [
					"Articles"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateArticleDTO"
							}
						}
					}
				}
			}
		},
		"/articles/{id}": {
			"put": {
				"operationId": "UpdateArticle",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ArticleResponseDTO"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Articles"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateArticleDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetArticle",
				"responses": {
					"200": {
						"description": "Article retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ArticleResponseDTO"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Articles"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/articles": {
			"get": {
				"operationId": "GetAllArticles",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Get all articles",
				"tags": [
					"Articles"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:5000/"
		}
	]
}